version: '3.8'

services:
  # Serviço 1: Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      # Não usa o Dockerfile de produção, só instala dependências
      target: deps
    container_name: nextjs_dev
    volumes:
      - ./frontend:/app # Espelha seu código
      - /app/node_modules # Não espelha node_modules
    command: npm run dev # Roda o servidor de dev
    ports:
      - "3000:3000"
    networks:
      - trello_network

  # Serviço 2: Backend (Laravel)
  backend:
    build:
      context: ./backend
      # Usa o estágio 'vendor' do Dockerfile para instalar composer
      target: vendor
    container_name: laravel_dev
    volumes:
      - ./backend:/app # Espelha seu código
    command: php artisan serve --host=0.0.0.0 --port=8000 # Roda o servidor de dev
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - trello_network

  # Serviço 3: Banco de Dados
  db:
    image: mysql:8.0
    container_name: mysql_dev
    env_file: ./.env
    ports:
      - "3306:3306" # Expõe para seu PC (para DBeaver, etc)
    volumes:
      - db_data_dev:/var/lib/mysql
    networks:
      - trello_network

  # Serviço 4: Cache
  redis:
    image: redis:6-alpine
    container_name: redis_dev
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file: ./.env
    ports:
      - "6379:6379"
    networks:
      - trello_network

networks:
  trello_network:
    driver: bridge

volumes:
  db_data_dev: