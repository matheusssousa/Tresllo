version: '3.8'

services:
  # Serviço 1: Proxy Reverso (A Porta de Entrada)
  proxy:
    image: nginx:1.21-alpine
    container_name: nginx_proxy
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80" # A única porta pública!
    depends_on:
      - frontend
      - backend
    networks:
      - trello_network
    restart: always

  # Serviço 2: Frontend (Next.js Otimizado)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_prod
    command: node server.js # Roda o servidor otimizado
    networks:
      - trello_network
    restart: always

  # Serviço 3: Backend (Laravel + Apache)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_prod
    env_file:
      - ./.env # Passa senhas
      - ./backend/.env # Passa config do Laravel (mas o DB_HOST='db' está lá)
    volumes:
      - ./backend/storage:/var/www/html/storage # Persiste uploads/logs
    networks:
      - trello_network
    depends_on:
      - db
      - redis
    restart: always

  # Serviço 4: Banco de Dados
  db:
    image: mysql:8.0
    container_name: mysql_prod
    env_file: ./.env
    volumes:
      - db_data_prod:/var/lib/mysql # Volume de produção
    networks:
      - trello_network
    restart: always

  # Serviço 5: Cache
  redis:
    image: redis:6-alpine
    container_name: redis_prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file: ./.env
    networks:
      - trello_network
    restart: always

networks:
  trello_network:
    driver: bridge

volumes:
  db_data_prod: